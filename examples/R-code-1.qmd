## ========== chapter 2

```{r}
#| eval: false
mystring <- "Hello \n world!"
cat(mystring)
print(mystring)
```


```{r}
#| eval=FALSE
help("mean")
?mean
example("mean")
help.search("mean")
??mean
help(package="MASS")
```

```{r}
#| eval: FALSE
library(UsingR)
```


```{r}
#| eval: FALSE
install.packages("UsingR")
```


```{r}
#| eval: FALSE
.libPaths()
path.package()
```


```{r}
#| eval: FALSE
data(rivers)
length(rivers)
class(rivers)
data(package="UsingR")
library(HistData)
head(Cavendish)
str(Cavendish)
```

```{r}
#| eval=F
#| 
quarto::quarto_render("test.qmd", output_format = "html")
```

Code is executed but neither the code nor its results are displayed

```{r}
#| include=FALSE

summary(cars)
```

Code is executed and results are included, but the code is hidden

```{r}
#| echo=FALSE
summary(cars)
```

Code is not executed but displayed in the document

```{r}
#| eval=FALSE
summary(cars)
```



# ======== Chapter 3

```{r}
#| eval: false
library(UsingR)
data(batting)
str(batting)

mydf <- data.frame(id = batting$playerID, 
           team = batting$teamID,
           hr = batting$HR,
           so = batting$SO,
           soperhr = batting$SO/batting$HR)

head(mydf)

```


```{r}
#| eval: false
plot(mydf$hr, mydf$so)
mycor <- cor(mydf$hr, mydf$so)
fit <- lm(mydf$so ~ mydf$hr)
plot(mydf$hr, mydf$so); abline(fit); text(50, 170, round(mycor,2))
```


```{r}
#| eval: false
o <- order(mydf$hr)
mydf2 <- mydf[,o]

write.table(mydf2, file="baseball.txt")
write.table(mydf2, file="baseball.txt", quote=F)
write.table(mydf2, file="baseball.txt", quote=F, row.names=F)
write.table(mydf2, file="baseball.csv", quote=F, row.names=F, sep=",")
write.table(mydf2, file="baseball.csv", quote=F, row.names=F, sep=",")
```


```{r}
#| eval: false
install.packages("readxl")
library(readxl)

dat <- read_excel("plate_reader.xls", sheet=1, skip = 0, col_names=T)
```



# ======== Chapter 4

```{r, eval=F}
library(tidyverse)

tb <- tibble(
  x = 1:5, 
  y = 1, 
  z = x ^ 2 + y
)

as_tibble(iris)
head(iris)
```



```{r, eval=F}

x <- 1:3
y <- list(1:5, 1:10, 1:20)

data.frame(x, y)
tibble(x, y)


```


```{r, eval=F}
names(data.frame(`crazy name` = 1))
names(tibble(`crazy name` = 1))
```


```{r, eval=F}

data.frame(x = 1:5, y = x ^ 2)
tibble(x = 1:5, y = x ^ 2)

```

```{r, eval=F}
df1 <- data.frame(x = 1:3, y = 3:1)
class(df1)
class(df1[, 1:2])
class(df1[, 1])

df2 <- tibble(x = 1:3, y = 3:1)
class(df2)
class(df2[, 1:2])
class(df2[, 1])
class(df2$x)
```


```{r, eval=F}
library(dplyr)

pi %>% sin
sin(pi)
pi %>% sin %>% cos
cos(sin(pi))
```

```{r, eval=F}
x <- 1:5
x %>% paste("a", sep="")
```


```{r, eval=F}
x <- data.frame(x=c(1:100), y=c(201:300))
sum(colMeans(x))

x <- data.frame(x=c(1:100), y=c(201:300))
x %>% colMeans %>% sum
```


```{r, eval=F}
6 %>% round(pi, digits=.)
round(pi, digits=6)
```


```{r, eval=F}
airquality

myair <- airquality[1:5,]
myair_long <- pivot_longer(myair, c("Ozone", "Solar.R", "Wind", "Temp"))
myair_long 

myair_long <- myair %>% 
  pivot_longer(c("Ozone", "Solar.R", "Wind", "Temp"))
myair_long 

myair_long2 <- myair %>% 
  pivot_longer(c(Ozone, Solar.R, Wind, Temp))
myair_long2 

myair_long3 <- myair %>% 
  pivot_longer(!c(Month, Day))
myair_long3

```



```{r, eval=F}


myair_long <- myair %>% 
  pivot_longer(c(Ozone, Solar.R, Wind, Temp), 
               names_to = "Type", 
               values_to = "Observation")
myair_long 

```



```{r, eval=F}
myair_long %>% 
  pivot_wider(
    names_from = Type, 
    values_from = Observation)
```




```{r, eval=F}

newairquality <- airquality %>% 
  unite(Date, Month, Day, sep=".")
newairquality
```


```{r, eval=F}
newairquality %>% 
  separate(col=Date, into = c("Month", "Day"), sep = "\\.")

```



```{r, eval=F}
library(tidyverse)

iris %>% head(10)
iris %>% str
```



```{r, eval=F}
head(iris)
iris %>% select(Species, everything()) %>% head(5)
iris %>% select(Species, everything())
iris %>% select(-Species)
```


```{r, eval=F}
iris %>% select(starts_with('S'))
iris %>% select(obs = starts_with('S'))
```


```{r, eval=F}
iris2 <- rename(iris, aavar = Petal.Length)
select(iris2, matches("(.)\\1"))
tmp <-iris[,3:5]
colnames(iris)[grep("^S", colnames(iris))]
iris[,grep("^S", colnames(iris))]
tmp
```


```{r, eval=F}
library(dplyr)

head(iris)
iris %>% 
  filter(Species=="setosa")

iris %>% 
  filter(Species=="setosa" | Species=="versicolor")

iris %>% 
  filter(Species=="setosa" & Species=="versicolor")

iris %>% 
  filter(Species=="setosa" | Species=="versicolor") %>% 
  dim

```


```{r, eval=F}
iris %>% arrange(Sepal.Length)
iris %>% arrange(desc(Sepal.Length))
iris %>% arrange(Sepal.Length, Sepal.Width)
```



```{r, eval=F}
iris2 <- iris %>% mutate(sepal_ratio = Sepal.Length/Sepal.Width)
head(iris2)
```



```{r, eval=F}
iris %>% summarise(mean(Sepal.Length), m=mean(Sepal.Width))
iris %>% 
  group_by(Species) %>% 
  summarise(mean(Sepal.Width))

iris %>% 
  group_by(Species) %>% 
  summarise_all(mean)

iris %>% 
  group_by(Species) %>% 
  summarise(across(everything(), mean))


iris %>% 
  group_by(Species) %>% 
  summarise_all(sd)

iris %>% 
  group_by(Species) %>% 
  summarise(across(everything(), sd))

```



```{r, eval=F}
df1 <- data.frame(id=c(1,2,3,4,5,6), age=c(30, 41, 33, 56, 20, 17))
df2 <- data.frame(id=c(4,5,6,7,8,9), gender=c("f", "f", "m", "m", "f", "m"))

inner_join(df1, df2, by="id")
left_join(df1, df2, "id")
right_join(df1, df2, "id")
full_join(df1, df2, "id")

# vs.
cbind(df1, df2)
```



```{r, eval=F}
iris_split <- split(iris, iris$Species)
iris_means <- lapply(iris_split, function(x){mean(x$Sepal.Length)})
iris_sd <- lapply(iris_split, function(x){sd(x$Sepal.Length)})
iris_cnt <- lapply(iris_split, function(x){length(x$Sepal.Length)})
iris_df <- data.frame(unlist(iris_cnt), unlist(iris_means), unlist(iris_sd))

```


```{r, eval=F}
iris_df <- iris %>% 
  group_by(Species) %>% 
  summarise(n=n(), mean=mean(Sepal.Length), sd=sd(Sepal.Length))
```



```{r, eval=F}
iris_mean_df <- iris %>% 
  group_by(Species) %>% 
  summarise(across(everything(), mean))
```


```{r, eval=F}
library(ggplot2)

iris_mean_df2 <- iris_mean_df %>% 
  pivot_longer(-Species)

ggplot(iris_mean_df2, aes(x=Species, y=value, fill=name)) +
  geom_bar(stat="identity", position="dodge")

```





